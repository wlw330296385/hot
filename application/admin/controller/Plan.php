<?php

namespace app\admin\controller;
use app\admin\controller\base\Backend;
use app\service\AuthService;
use think\Db;
use app\model\Plan as PlanModel;
use app\model\Exercise as ExerciseModel;

class Plan extends Backend {
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $grade_category = Db::name('grade_category')->field(['id', 'name', 'pid'])->cache()->select();
        $grade_category = channelLevel($grade_category, 0, 'id', 'pid');
        $this->assign('category', $grade_category);
    }

    // 管理
    public function index() {
        $outline = input('outline');
        if ($outline) {
            $map['outline'] = ['like', '%'. $outline .'%'];
        }
        $grade_category_id = input('grade_category_id');
        if ($grade_category_id) {
            $map['grade_category_id'] = $grade_category_id;
        }

        $map['type'] = 0;
        $map['camp_id'] = 0;
        $list = PlanModel::where($map)->paginate(15);

        $breadcrumb = ['title' => '教案管理', 'ptitle' => '训练营'];
        $this->assign('breadcrumb', $breadcrumb);
        $this->assign('list', $list);
        return $this->fetch();
    }

    // 前台发布列表
    public function manage() {
        $map['type'] = 1;
        $map['camp_id'] = ['>', 0];
        if ($cur_camp = $this->cur_camp) {
            $map['camp_id'] = $cur_camp['camp_id'];
        }
        $camp = input('camp');
        if ($camp) {
            $map['camp'] = ['like', '%'. $camp .'%'];
        }
        $outline = input('outline');
        if ($outline) {
            $map['outline'] = ['like', '%'. $outline .'%'];
        }
        $grade_category_id = input('grade_category_id');
        if ($grade_category_id) {
            $map['grade_category_id'] = $grade_category_id;
        }
        $member = input('member');
        if ($member) {
            $map['member'] = ['like', '%'. $member .'%'];
        }
        $list = PlanModel::where($map)->paginate(15);

        $breadcrumb = ['title' => '教案审核列表', 'ptitle' => '训练营'];
        $this->assign('breadcrumb', $breadcrumb);
        $this->assign('list', $list);
        return $this->fetch();
    }

    // 创建视图
    public function create() {
        $breadcrumb = ['title' => '添加教案', 'ptitle' => '教案管理'];
        $this->assign('breadcrumb', $breadcrumb);
        return view();
    }

    // 平台训练项目列表
    public function exerciselist() {
        $exercise = ExerciseModel::where(['camp_id' => 0])->select()->toArray();
        $exercise = channelLevel($exercise, 0, 'id', 'pid');

        $this->assign('exercise', $exercise);
        return view();
    }

    // 训练项目所选html代码
    public function exercise_setected_html($arr) {
        $html = "";
        foreach ($arr as $k => $v) {
            $html .= "<div class='col-sm-6 col-md-3 col-xs-12'>";
            $html .= "<ul class='list-group'><li class='list-group-item exer_p' data-id='". $v['id'] ."'>". $v['name'] ."</li>";
            if ($v['_data']) {
                foreach ($v['_data'] as $v2) {
                    $html .= "<li class='list-group-item clearfix'><label>";
                    $html .= "<span data-id='". $v2['id'] ."'>". $v2['name'] ."</span></label></li>";
                }
            }
            $html .= "</ul></div>";
        }
        //dump($html);
        return $html;
    }

    // 处理组合所选训练项目
    public function handleselected() {
        if ( request()->isAjax() ) {
            $content = input('content');
            $data = explode('|', $content);
            $arr = [];
            foreach ($data as $k => $v) {
                $temp = explode(',', $v);
                $arr[$k]['id'] = $temp[0];
                $arr[$k]['name'] = $temp[1];
                $arr[$k]['pid'] = isset($temp[2]) ? $temp[2] : 0;
            }
            $arr = channelLevel($arr, 0, 'id', 'pid');
            //dump($arr);

            $string = serialize($arr);
            //dump($string);
            $html = $this->exercise_setected_html($arr);

            if ($string && $html) {
                return [ 'status' => 1, 'string' => $string, 'html' => $html ];
            } else {
                return [ 'status' => 0, 'msg' => __lang('MSG_000_NULL')];
            }
        }
    }

    // 获取训练项目所选
    public function ajaxselected()
    {
        if (request()->isAjax()) {
            $content = input('content');
            $data = unserialize($content);
            $arr = [];
            foreach ($data as $v) {
                if ($v['_data']) {
                    foreach ($v['_data'] as $v2) {
                        array_push($arr, $v2['id']);
                    }
                }
            }
            if ($arr) {
                return ['status' => 1, 'data' => $arr];
            } else {
                return [ 'status' => 0, 'msg' => __lang('MSG_000_NULL')];
            }
        }
    }

    // 储存新数据
    public function store() {
        $request = request()->post();
        //dump($request);
        $data = [
            'camp_id' => 0,
            'camp' => '平台',
            'outline' => $request['outline'],
            'outline_detail' => $request['outline_detail'],
            'exercise' => $request['exercise'],
            'grade_category_id' => $request['grade_category_id'],
            'grade_category' => $request['grade_category'],
            'type' => 0,
            'is_open' => 1,
            'status' => 1,
            'create_time' => time(),
            'update_time' => time()
        ];
        $res = Db::name('plan')->insertGetId($data);
        $AuthS = new AuthService();
        if ($res) {
            $AuthS->record('添加平台教案 id:'. $res . '成功');
            $this->success(__Lang('MSG_100_SUCCESS'), 'plan/index');
        } else {
            $AuthS->record('添加平台教案 失败');
            $this->error(__lang('MSG_200_ERROR'));
        }
    }

    // 详情视图
    public function show() {
        $id = input('id');
        $plan = PlanModel::get($id)->toArray();
        $view = ($plan['type'] > 0) ? 'audit' : 'show';

        $this->assign('plan', $plan);
        return view($view);
    }


    // 更新数据
    public function update() {
        if (request()->isPost()) {
            $id = input('id');
            $saveData = [
                'id' => $id,
                'outline' => input('outline'),
                'grade_category_id' => input('grade_category_id'),
                'grade_category' => input('grade_category'),
                'outline_detail' => input('outline_detail'),
                'exercise' => input('exercise'),
                'sys_remarks' => input('sys_remarks'),
                'update_time' => time()
            ];
            $execute = Db::name('plan')->update($saveData);
            $AuthS = new AuthService();
            if ($execute) {
                $AuthS->record('修改平台教案id:'. $id . ' 成功');
                $this->success(__lang('MSG_200'));
            } else {
                $AuthS->record('修改平台教案id:'. $id . ' 失败');
                $this->error(__lang('MSG_400'));
            }
        }
    }

    public function audit() {
        if (request()->isAjax()) {
            $id = input('planid');
            $status = input('code');
            $sys_remarks = input('sys_remarks');
            $data = [
                'id' => $id,
                'status' => $status,
                'sys_remarks' => $sys_remarks,
                'update_time' => time()
            ];
            $execute = Db::name('plan')->update($data);
            $AuthS = new AuthService();

            if ($execute) {
                $no = '';
                if ($status == 2) {
                    $no = '不';
                }

                $AuthS->record('审核前台发布教案id: '. $id .' 审核'. $no .'通过 成功');
                $response = [ 'status' => 1, 'msg' => __lang('MSG_200'), 'goto' => url('plan/manage') ];
            } else{
                $AuthS->record('审核前台发布教案id: '. $id .' 审核 失败');
                $response = [ 'status' => 0, 'msg' => __lang('MSG_400') ];
            }
            return $response;
        }
    }

    // (软)删除数据
    public function del() {

    }
}